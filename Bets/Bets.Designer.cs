//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BetsModel", "FK_GlobalBets_Players", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Bets.DynamicData.Player), "GlobalBet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.GlobalBet), true)]
[assembly: EdmRelationshipAttribute("BetsModel", "FK_GlobalBets_Teams", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Bets.DynamicData.Team), "GlobalBet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.GlobalBet), true)]
[assembly: EdmRelationshipAttribute("BetsModel", "FK_GlobalBets_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bets.DynamicData.User), "GlobalBet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.GlobalBet), true)]
[assembly: EdmRelationshipAttribute("BetsModel", "FK_GoalscorersForRounds_Players", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bets.DynamicData.Player), "GoalscorersForRound", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.GoalscorersForRound), true)]
[assembly: EdmRelationshipAttribute("BetsModel", "FK_GoalscorersForRounds_Rounds", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bets.DynamicData.Round), "GoalscorersForRound", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.GoalscorersForRound), true)]
[assembly: EdmRelationshipAttribute("BetsModel", "FK_LNXBets_Bet_LNXBets_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bets.DynamicData.User), "MatchBet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.MatchBet), true)]
[assembly: EdmRelationshipAttribute("BetsModel", "FK_LNXBets_Matches_LNXBets_Matches", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bets.DynamicData.Team), "Match", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.Match), true)]
[assembly: EdmRelationshipAttribute("BetsModel", "FK_LNXBets_Matches_LNXBets_Teams", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bets.DynamicData.Team), "Match", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.Match), true)]
[assembly: EdmRelationshipAttribute("BetsModel", "FK_Matches_Rounds", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bets.DynamicData.Round), "Match", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.Match), true)]
[assembly: EdmRelationshipAttribute("BetsModel", "FK_PointsForRounds_Rounds", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bets.DynamicData.Round), "PointsForRound", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.PointsForRound), true)]
[assembly: EdmRelationshipAttribute("BetsModel", "FK_PointsForRounds_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bets.DynamicData.User), "PointsForRound", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.PointsForRound), true)]
[assembly: EdmRelationshipAttribute("BetsModel", "FK_Settings_Rounds", "Round", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Bets.DynamicData.Round), "Setting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Bets.DynamicData.Setting), true)]

#endregion

namespace Bets.DynamicData
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BetsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BetsEntities object using the connection string found in the 'BetsEntities' section of the application configuration file.
        /// </summary>
        public BetsEntities() : base("name=BetsEntities", "BetsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BetsEntities object.
        /// </summary>
        public BetsEntities(string connectionString) : base(connectionString, "BetsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BetsEntities object.
        /// </summary>
        public BetsEntities(EntityConnection connection) : base(connection, "BetsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalBet> GlobalBets
        {
            get
            {
                if ((_GlobalBets == null))
                {
                    _GlobalBets = base.CreateObjectSet<GlobalBet>("GlobalBets");
                }
                return _GlobalBets;
            }
        }
        private ObjectSet<GlobalBet> _GlobalBets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoalscorersForRound> GoalscorersForRounds
        {
            get
            {
                if ((_GoalscorersForRounds == null))
                {
                    _GoalscorersForRounds = base.CreateObjectSet<GoalscorersForRound>("GoalscorersForRounds");
                }
                return _GoalscorersForRounds;
            }
        }
        private ObjectSet<GoalscorersForRound> _GoalscorersForRounds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MatchBet> MatchBets
        {
            get
            {
                if ((_MatchBets == null))
                {
                    _MatchBets = base.CreateObjectSet<MatchBet>("MatchBets");
                }
                return _MatchBets;
            }
        }
        private ObjectSet<MatchBet> _MatchBets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Match> Matches
        {
            get
            {
                if ((_Matches == null))
                {
                    _Matches = base.CreateObjectSet<Match>("Matches");
                }
                return _Matches;
            }
        }
        private ObjectSet<Match> _Matches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PointsForRound> PointsForRounds
        {
            get
            {
                if ((_PointsForRounds == null))
                {
                    _PointsForRounds = base.CreateObjectSet<PointsForRound>("PointsForRounds");
                }
                return _PointsForRounds;
            }
        }
        private ObjectSet<PointsForRound> _PointsForRounds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Round> Rounds
        {
            get
            {
                if ((_Rounds == null))
                {
                    _Rounds = base.CreateObjectSet<Round>("Rounds");
                }
                return _Rounds;
            }
        }
        private ObjectSet<Round> _Rounds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Setting> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Setting>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Setting> _Settings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalBets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalBets(GlobalBet globalBet)
        {
            base.AddObject("GlobalBets", globalBet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoalscorersForRounds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoalscorersForRounds(GoalscorersForRound goalscorersForRound)
        {
            base.AddObject("GoalscorersForRounds", goalscorersForRound);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MatchBets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMatchBets(MatchBet matchBet)
        {
            base.AddObject("MatchBets", matchBet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Matches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMatches(Match match)
        {
            base.AddObject("Matches", match);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PointsForRounds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPointsForRounds(PointsForRound pointsForRound)
        {
            base.AddObject("PointsForRounds", pointsForRound);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rounds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRounds(Round round)
        {
            base.AddObject("Rounds", round);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Setting setting)
        {
            base.AddObject("Settings", setting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BetsModel", Name="GlobalBet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalBet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalBet object.
        /// </summary>
        /// <param name="betID">Initial value of the BetID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static GlobalBet CreateGlobalBet(global::System.Int32 betID, global::System.Int32 userID)
        {
            GlobalBet globalBet = new GlobalBet();
            globalBet.BetID = betID;
            globalBet.UserID = userID;
            return globalBet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BetID
        {
            get
            {
                return _BetID;
            }
            set
            {
                if (_BetID != value)
                {
                    OnBetIDChanging(value);
                    ReportPropertyChanging("BetID");
                    _BetID = StructuralObject.SetValidValue(value, "BetID");
                    ReportPropertyChanged("BetID");
                    OnBetIDChanged();
                }
            }
        }
        private global::System.Int32 _BetID;
        partial void OnBetIDChanging(global::System.Int32 value);
        partial void OnBetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WinnerTeamID
        {
            get
            {
                return _WinnerTeamID;
            }
            set
            {
                OnWinnerTeamIDChanging(value);
                ReportPropertyChanging("WinnerTeamID");
                _WinnerTeamID = StructuralObject.SetValidValue(value, "WinnerTeamID");
                ReportPropertyChanged("WinnerTeamID");
                OnWinnerTeamIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WinnerTeamID;
        partial void OnWinnerTeamIDChanging(Nullable<global::System.Int32> value);
        partial void OnWinnerTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GoalscorerID
        {
            get
            {
                return _GoalscorerID;
            }
            set
            {
                OnGoalscorerIDChanging(value);
                ReportPropertyChanging("GoalscorerID");
                _GoalscorerID = StructuralObject.SetValidValue(value, "GoalscorerID");
                ReportPropertyChanged("GoalscorerID");
                OnGoalscorerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GoalscorerID;
        partial void OnGoalscorerIDChanging(Nullable<global::System.Int32> value);
        partial void OnGoalscorerIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_GlobalBets_Players", "Player")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("BetsModel.FK_GlobalBets_Players", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("BetsModel.FK_GlobalBets_Players", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("BetsModel.FK_GlobalBets_Players", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("BetsModel.FK_GlobalBets_Players", "Player", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_GlobalBets_Teams", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("BetsModel.FK_GlobalBets_Teams", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("BetsModel.FK_GlobalBets_Teams", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("BetsModel.FK_GlobalBets_Teams", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("BetsModel.FK_GlobalBets_Teams", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_GlobalBets_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BetsModel.FK_GlobalBets_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BetsModel.FK_GlobalBets_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BetsModel.FK_GlobalBets_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BetsModel.FK_GlobalBets_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BetsModel", Name="GoalscorersForRound")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoalscorersForRound : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoalscorersForRound object.
        /// </summary>
        /// <param name="roundID">Initial value of the RoundID property.</param>
        /// <param name="goalscorerID">Initial value of the GoalscorerID property.</param>
        /// <param name="goals">Initial value of the Goals property.</param>
        public static GoalscorersForRound CreateGoalscorersForRound(global::System.Int32 roundID, global::System.Int32 goalscorerID, global::System.Int32 goals)
        {
            GoalscorersForRound goalscorersForRound = new GoalscorersForRound();
            goalscorersForRound.RoundID = roundID;
            goalscorersForRound.GoalscorerID = goalscorerID;
            goalscorersForRound.Goals = goals;
            return goalscorersForRound;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundID
        {
            get
            {
                return _RoundID;
            }
            set
            {
                if (_RoundID != value)
                {
                    OnRoundIDChanging(value);
                    ReportPropertyChanging("RoundID");
                    _RoundID = StructuralObject.SetValidValue(value, "RoundID");
                    ReportPropertyChanged("RoundID");
                    OnRoundIDChanged();
                }
            }
        }
        private global::System.Int32 _RoundID;
        partial void OnRoundIDChanging(global::System.Int32 value);
        partial void OnRoundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalscorerID
        {
            get
            {
                return _GoalscorerID;
            }
            set
            {
                if (_GoalscorerID != value)
                {
                    OnGoalscorerIDChanging(value);
                    ReportPropertyChanging("GoalscorerID");
                    _GoalscorerID = StructuralObject.SetValidValue(value, "GoalscorerID");
                    ReportPropertyChanged("GoalscorerID");
                    OnGoalscorerIDChanged();
                }
            }
        }
        private global::System.Int32 _GoalscorerID;
        partial void OnGoalscorerIDChanging(global::System.Int32 value);
        partial void OnGoalscorerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Goals
        {
            get
            {
                return _Goals;
            }
            set
            {
                OnGoalsChanging(value);
                ReportPropertyChanging("Goals");
                _Goals = StructuralObject.SetValidValue(value, "Goals");
                ReportPropertyChanged("Goals");
                OnGoalsChanged();
            }
        }
        private global::System.Int32 _Goals;
        partial void OnGoalsChanging(global::System.Int32 value);
        partial void OnGoalsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_GoalscorersForRounds_Players", "Player")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("BetsModel.FK_GoalscorersForRounds_Players", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("BetsModel.FK_GoalscorersForRounds_Players", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("BetsModel.FK_GoalscorersForRounds_Players", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("BetsModel.FK_GoalscorersForRounds_Players", "Player", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_GoalscorersForRounds_Rounds", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_GoalscorersForRounds_Rounds", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_GoalscorersForRounds_Rounds", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_GoalscorersForRounds_Rounds", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("BetsModel.FK_GoalscorersForRounds_Rounds", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BetsModel", Name="Match")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Match : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Match object.
        /// </summary>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="firstTeamID">Initial value of the FirstTeamID property.</param>
        /// <param name="secondTeamID">Initial value of the SecondTeamID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="points1">Initial value of the Points1 property.</param>
        /// <param name="pointsX">Initial value of the PointsX property.</param>
        /// <param name="points2">Initial value of the Points2 property.</param>
        /// <param name="roundID">Initial value of the RoundID property.</param>
        public static Match CreateMatch(global::System.Int32 matchID, global::System.Int32 firstTeamID, global::System.Int32 secondTeamID, global::System.DateTime date, global::System.Int32 points1, global::System.Int32 pointsX, global::System.Int32 points2, global::System.Int32 roundID)
        {
            Match match = new Match();
            match.MatchID = matchID;
            match.FirstTeamID = firstTeamID;
            match.SecondTeamID = secondTeamID;
            match.Date = date;
            match.Points1 = points1;
            match.PointsX = pointsX;
            match.Points2 = points2;
            match.RoundID = roundID;
            return match;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                if (_MatchID != value)
                {
                    OnMatchIDChanging(value);
                    ReportPropertyChanging("MatchID");
                    _MatchID = StructuralObject.SetValidValue(value, "MatchID");
                    ReportPropertyChanged("MatchID");
                    OnMatchIDChanged();
                }
            }
        }
        private global::System.Int32 _MatchID;
        partial void OnMatchIDChanging(global::System.Int32 value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirstTeamID
        {
            get
            {
                return _FirstTeamID;
            }
            set
            {
                OnFirstTeamIDChanging(value);
                ReportPropertyChanging("FirstTeamID");
                _FirstTeamID = StructuralObject.SetValidValue(value, "FirstTeamID");
                ReportPropertyChanged("FirstTeamID");
                OnFirstTeamIDChanged();
            }
        }
        private global::System.Int32 _FirstTeamID;
        partial void OnFirstTeamIDChanging(global::System.Int32 value);
        partial void OnFirstTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecondTeamID
        {
            get
            {
                return _SecondTeamID;
            }
            set
            {
                OnSecondTeamIDChanging(value);
                ReportPropertyChanging("SecondTeamID");
                _SecondTeamID = StructuralObject.SetValidValue(value, "SecondTeamID");
                ReportPropertyChanged("SecondTeamID");
                OnSecondTeamIDChanged();
            }
        }
        private global::System.Int32 _SecondTeamID;
        partial void OnSecondTeamIDChanging(global::System.Int32 value);
        partial void OnSecondTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points1
        {
            get
            {
                return _Points1;
            }
            set
            {
                OnPoints1Changing(value);
                ReportPropertyChanging("Points1");
                _Points1 = StructuralObject.SetValidValue(value, "Points1");
                ReportPropertyChanged("Points1");
                OnPoints1Changed();
            }
        }
        private global::System.Int32 _Points1;
        partial void OnPoints1Changing(global::System.Int32 value);
        partial void OnPoints1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PointsX
        {
            get
            {
                return _PointsX;
            }
            set
            {
                OnPointsXChanging(value);
                ReportPropertyChanging("PointsX");
                _PointsX = StructuralObject.SetValidValue(value, "PointsX");
                ReportPropertyChanged("PointsX");
                OnPointsXChanged();
            }
        }
        private global::System.Int32 _PointsX;
        partial void OnPointsXChanging(global::System.Int32 value);
        partial void OnPointsXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points2
        {
            get
            {
                return _Points2;
            }
            set
            {
                OnPoints2Changing(value);
                ReportPropertyChanging("Points2");
                _Points2 = StructuralObject.SetValidValue(value, "Points2");
                ReportPropertyChanged("Points2");
                OnPoints2Changed();
            }
        }
        private global::System.Int32 _Points2;
        partial void OnPoints2Changing(global::System.Int32 value);
        partial void OnPoints2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundID
        {
            get
            {
                return _RoundID;
            }
            set
            {
                OnRoundIDChanging(value);
                ReportPropertyChanging("RoundID");
                _RoundID = StructuralObject.SetValidValue(value, "RoundID");
                ReportPropertyChanged("RoundID");
                OnRoundIDChanged();
            }
        }
        private global::System.Int32 _RoundID;
        partial void OnRoundIDChanging(global::System.Int32 value);
        partial void OnRoundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FirstTeamGoals
        {
            get
            {
                return _FirstTeamGoals;
            }
            set
            {
                OnFirstTeamGoalsChanging(value);
                ReportPropertyChanging("FirstTeamGoals");
                _FirstTeamGoals = StructuralObject.SetValidValue(value, "FirstTeamGoals");
                ReportPropertyChanged("FirstTeamGoals");
                OnFirstTeamGoalsChanged();
            }
        }
        private Nullable<global::System.Int32> _FirstTeamGoals;
        partial void OnFirstTeamGoalsChanging(Nullable<global::System.Int32> value);
        partial void OnFirstTeamGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecondTeamGoals
        {
            get
            {
                return _SecondTeamGoals;
            }
            set
            {
                OnSecondTeamGoalsChanging(value);
                ReportPropertyChanging("SecondTeamGoals");
                _SecondTeamGoals = StructuralObject.SetValidValue(value, "SecondTeamGoals");
                ReportPropertyChanged("SecondTeamGoals");
                OnSecondTeamGoalsChanged();
            }
        }
        private Nullable<global::System.Int32> _SecondTeamGoals;
        partial void OnSecondTeamGoalsChanging(Nullable<global::System.Int32> value);
        partial void OnSecondTeamGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value, "Result");
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private Nullable<global::System.Int32> _Result;
        partial void OnResultChanging(Nullable<global::System.Int32> value);
        partial void OnResultChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_LNXBets_Matches_LNXBets_Matches", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("BetsModel.FK_LNXBets_Matches_LNXBets_Matches", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("BetsModel.FK_LNXBets_Matches_LNXBets_Matches", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("BetsModel.FK_LNXBets_Matches_LNXBets_Matches", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("BetsModel.FK_LNXBets_Matches_LNXBets_Matches", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_LNXBets_Matches_LNXBets_Teams", "Team")]
        public Team Team1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("BetsModel.FK_LNXBets_Matches_LNXBets_Teams", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("BetsModel.FK_LNXBets_Matches_LNXBets_Teams", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> Team1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("BetsModel.FK_LNXBets_Matches_LNXBets_Teams", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("BetsModel.FK_LNXBets_Matches_LNXBets_Teams", "Team", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_Matches_Rounds", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_Matches_Rounds", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_Matches_Rounds", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_Matches_Rounds", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("BetsModel.FK_Matches_Rounds", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BetsModel", Name="MatchBet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MatchBet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MatchBet object.
        /// </summary>
        /// <param name="betID">Initial value of the BetID property.</param>
        /// <param name="matchID">Initial value of the MatchID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="firstTeamGoals">Initial value of the FirstTeamGoals property.</param>
        /// <param name="secondTeamGoals">Initial value of the SecondTeamGoals property.</param>
        /// <param name="result">Initial value of the Result property.</param>
        /// <param name="pointsWon">Initial value of the PointsWon property.</param>
        /// <param name="pointsWonBonus">Initial value of the PointsWonBonus property.</param>
        /// <param name="winTypeID">Initial value of the WinTypeID property.</param>
        /// <param name="bonus">Initial value of the Bonus property.</param>
        public static MatchBet CreateMatchBet(global::System.Int32 betID, global::System.Int32 matchID, global::System.Int32 userID, global::System.Int32 firstTeamGoals, global::System.Int32 secondTeamGoals, global::System.Int32 result, global::System.Int32 pointsWon, global::System.Int32 pointsWonBonus, global::System.Int32 winTypeID, global::System.Int32 bonus)
        {
            MatchBet matchBet = new MatchBet();
            matchBet.BetID = betID;
            matchBet.MatchID = matchID;
            matchBet.UserID = userID;
            matchBet.FirstTeamGoals = firstTeamGoals;
            matchBet.SecondTeamGoals = secondTeamGoals;
            matchBet.Result = result;
            matchBet.PointsWon = pointsWon;
            matchBet.PointsWonBonus = pointsWonBonus;
            matchBet.WinTypeID = winTypeID;
            matchBet.Bonus = bonus;
            return matchBet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BetID
        {
            get
            {
                return _BetID;
            }
            set
            {
                if (_BetID != value)
                {
                    OnBetIDChanging(value);
                    ReportPropertyChanging("BetID");
                    _BetID = StructuralObject.SetValidValue(value, "BetID");
                    ReportPropertyChanged("BetID");
                    OnBetIDChanged();
                }
            }
        }
        private global::System.Int32 _BetID;
        partial void OnBetIDChanging(global::System.Int32 value);
        partial void OnBetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatchID
        {
            get
            {
                return _MatchID;
            }
            set
            {
                OnMatchIDChanging(value);
                ReportPropertyChanging("MatchID");
                _MatchID = StructuralObject.SetValidValue(value, "MatchID");
                ReportPropertyChanged("MatchID");
                OnMatchIDChanged();
            }
        }
        private global::System.Int32 _MatchID;
        partial void OnMatchIDChanging(global::System.Int32 value);
        partial void OnMatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirstTeamGoals
        {
            get
            {
                return _FirstTeamGoals;
            }
            set
            {
                OnFirstTeamGoalsChanging(value);
                ReportPropertyChanging("FirstTeamGoals");
                _FirstTeamGoals = StructuralObject.SetValidValue(value, "FirstTeamGoals");
                ReportPropertyChanged("FirstTeamGoals");
                OnFirstTeamGoalsChanged();
            }
        }
        private global::System.Int32 _FirstTeamGoals;
        partial void OnFirstTeamGoalsChanging(global::System.Int32 value);
        partial void OnFirstTeamGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecondTeamGoals
        {
            get
            {
                return _SecondTeamGoals;
            }
            set
            {
                OnSecondTeamGoalsChanging(value);
                ReportPropertyChanging("SecondTeamGoals");
                _SecondTeamGoals = StructuralObject.SetValidValue(value, "SecondTeamGoals");
                ReportPropertyChanged("SecondTeamGoals");
                OnSecondTeamGoalsChanged();
            }
        }
        private global::System.Int32 _SecondTeamGoals;
        partial void OnSecondTeamGoalsChanging(global::System.Int32 value);
        partial void OnSecondTeamGoalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value, "Result");
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private global::System.Int32 _Result;
        partial void OnResultChanging(global::System.Int32 value);
        partial void OnResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PointsWon
        {
            get
            {
                return _PointsWon;
            }
            set
            {
                OnPointsWonChanging(value);
                ReportPropertyChanging("PointsWon");
                _PointsWon = StructuralObject.SetValidValue(value, "PointsWon");
                ReportPropertyChanged("PointsWon");
                OnPointsWonChanged();
            }
        }
        private global::System.Int32 _PointsWon;
        partial void OnPointsWonChanging(global::System.Int32 value);
        partial void OnPointsWonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PointsWonBonus
        {
            get
            {
                return _PointsWonBonus;
            }
            set
            {
                OnPointsWonBonusChanging(value);
                ReportPropertyChanging("PointsWonBonus");
                _PointsWonBonus = StructuralObject.SetValidValue(value, "PointsWonBonus");
                ReportPropertyChanged("PointsWonBonus");
                OnPointsWonBonusChanged();
            }
        }
        private global::System.Int32 _PointsWonBonus;
        partial void OnPointsWonBonusChanging(global::System.Int32 value);
        partial void OnPointsWonBonusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WinTypeID
        {
            get
            {
                return _WinTypeID;
            }
            set
            {
                OnWinTypeIDChanging(value);
                ReportPropertyChanging("WinTypeID");
                _WinTypeID = StructuralObject.SetValidValue(value, "WinTypeID");
                ReportPropertyChanged("WinTypeID");
                OnWinTypeIDChanged();
            }
        }
        private global::System.Int32 _WinTypeID;
        partial void OnWinTypeIDChanging(global::System.Int32 value);
        partial void OnWinTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Bonus
        {
            get
            {
                return _Bonus;
            }
            set
            {
                OnBonusChanging(value);
                ReportPropertyChanging("Bonus");
                _Bonus = StructuralObject.SetValidValue(value, "Bonus");
                ReportPropertyChanged("Bonus");
                OnBonusChanged();
            }
        }
        private global::System.Int32 _Bonus;
        partial void OnBonusChanging(global::System.Int32 value);
        partial void OnBonusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_LNXBets_Bet_LNXBets_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BetsModel.FK_LNXBets_Bet_LNXBets_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BetsModel.FK_LNXBets_Bet_LNXBets_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BetsModel.FK_LNXBets_Bet_LNXBets_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BetsModel.FK_LNXBets_Bet_LNXBets_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BetsModel", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="playerID">Initial value of the PlayerID property.</param>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="insertedDate">Initial value of the InsertedDate property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="points">Initial value of the Points property.</param>
        /// <param name="goalsScored">Initial value of the GoalsScored property.</param>
        public static Player CreatePlayer(global::System.Int32 playerID, global::System.Int32 teamID, global::System.String name, global::System.DateTime insertedDate, global::System.Boolean active, global::System.Int32 points, global::System.Int32 goalsScored)
        {
            Player player = new Player();
            player.PlayerID = playerID;
            player.TeamID = teamID;
            player.Name = name;
            player.InsertedDate = insertedDate;
            player.Active = active;
            player.Points = points;
            player.GoalsScored = goalsScored;
            return player;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerID
        {
            get
            {
                return _PlayerID;
            }
            set
            {
                if (_PlayerID != value)
                {
                    OnPlayerIDChanging(value);
                    ReportPropertyChanging("PlayerID");
                    _PlayerID = StructuralObject.SetValidValue(value, "PlayerID");
                    ReportPropertyChanged("PlayerID");
                    OnPlayerIDChanged();
                }
            }
        }
        private global::System.Int32 _PlayerID;
        partial void OnPlayerIDChanging(global::System.Int32 value);
        partial void OnPlayerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value, "TeamID");
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertedDate
        {
            get
            {
                return _InsertedDate;
            }
            set
            {
                OnInsertedDateChanging(value);
                ReportPropertyChanging("InsertedDate");
                _InsertedDate = StructuralObject.SetValidValue(value, "InsertedDate");
                ReportPropertyChanged("InsertedDate");
                OnInsertedDateChanged();
            }
        }
        private global::System.DateTime _InsertedDate;
        partial void OnInsertedDateChanging(global::System.DateTime value);
        partial void OnInsertedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value, "Points");
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private global::System.Int32 _Points;
        partial void OnPointsChanging(global::System.Int32 value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalsScored
        {
            get
            {
                return _GoalsScored;
            }
            set
            {
                OnGoalsScoredChanging(value);
                ReportPropertyChanging("GoalsScored");
                _GoalsScored = StructuralObject.SetValidValue(value, "GoalsScored");
                ReportPropertyChanged("GoalsScored");
                OnGoalsScoredChanged();
            }
        }
        private global::System.Int32 _GoalsScored;
        partial void OnGoalsScoredChanging(global::System.Int32 value);
        partial void OnGoalsScoredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalID
        {
            get
            {
                return _ExternalID;
            }
            set
            {
                OnExternalIDChanging(value);
                ReportPropertyChanging("ExternalID");
                _ExternalID = StructuralObject.SetValidValue(value, true, "ExternalID");
                ReportPropertyChanged("ExternalID");
                OnExternalIDChanged();
            }
        }
        private global::System.String _ExternalID;
        partial void OnExternalIDChanging(global::System.String value);
        partial void OnExternalIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_GlobalBets_Players", "GlobalBet")]
        public EntityCollection<GlobalBet> GlobalBets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GlobalBet>("BetsModel.FK_GlobalBets_Players", "GlobalBet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GlobalBet>("BetsModel.FK_GlobalBets_Players", "GlobalBet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_GoalscorersForRounds_Players", "GoalscorersForRound")]
        public EntityCollection<GoalscorersForRound> GoalscorersForRounds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoalscorersForRound>("BetsModel.FK_GoalscorersForRounds_Players", "GoalscorersForRound");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoalscorersForRound>("BetsModel.FK_GoalscorersForRounds_Players", "GoalscorersForRound", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BetsModel", Name="PointsForRound")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PointsForRound : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PointsForRound object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="roundID">Initial value of the RoundID property.</param>
        /// <param name="matchPoints">Initial value of the MatchPoints property.</param>
        /// <param name="matchPointsBonus">Initial value of the MatchPointsBonus property.</param>
        /// <param name="goalscorerPoints">Initial value of the GoalscorerPoints property.</param>
        public static PointsForRound CreatePointsForRound(global::System.Int32 userID, global::System.Int32 roundID, global::System.Int32 matchPoints, global::System.Int32 matchPointsBonus, global::System.Int32 goalscorerPoints)
        {
            PointsForRound pointsForRound = new PointsForRound();
            pointsForRound.UserID = userID;
            pointsForRound.RoundID = roundID;
            pointsForRound.MatchPoints = matchPoints;
            pointsForRound.MatchPointsBonus = matchPointsBonus;
            pointsForRound.GoalscorerPoints = goalscorerPoints;
            return pointsForRound;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, "UserID");
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundID
        {
            get
            {
                return _RoundID;
            }
            set
            {
                if (_RoundID != value)
                {
                    OnRoundIDChanging(value);
                    ReportPropertyChanging("RoundID");
                    _RoundID = StructuralObject.SetValidValue(value, "RoundID");
                    ReportPropertyChanged("RoundID");
                    OnRoundIDChanged();
                }
            }
        }
        private global::System.Int32 _RoundID;
        partial void OnRoundIDChanging(global::System.Int32 value);
        partial void OnRoundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatchPoints
        {
            get
            {
                return _MatchPoints;
            }
            set
            {
                OnMatchPointsChanging(value);
                ReportPropertyChanging("MatchPoints");
                _MatchPoints = StructuralObject.SetValidValue(value, "MatchPoints");
                ReportPropertyChanged("MatchPoints");
                OnMatchPointsChanged();
            }
        }
        private global::System.Int32 _MatchPoints;
        partial void OnMatchPointsChanging(global::System.Int32 value);
        partial void OnMatchPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatchPointsBonus
        {
            get
            {
                return _MatchPointsBonus;
            }
            set
            {
                OnMatchPointsBonusChanging(value);
                ReportPropertyChanging("MatchPointsBonus");
                _MatchPointsBonus = StructuralObject.SetValidValue(value, "MatchPointsBonus");
                ReportPropertyChanged("MatchPointsBonus");
                OnMatchPointsBonusChanged();
            }
        }
        private global::System.Int32 _MatchPointsBonus;
        partial void OnMatchPointsBonusChanging(global::System.Int32 value);
        partial void OnMatchPointsBonusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalscorerPoints
        {
            get
            {
                return _GoalscorerPoints;
            }
            set
            {
                OnGoalscorerPointsChanging(value);
                ReportPropertyChanging("GoalscorerPoints");
                _GoalscorerPoints = StructuralObject.SetValidValue(value, "GoalscorerPoints");
                ReportPropertyChanged("GoalscorerPoints");
                OnGoalscorerPointsChanged();
            }
        }
        private global::System.Int32 _GoalscorerPoints;
        partial void OnGoalscorerPointsChanging(global::System.Int32 value);
        partial void OnGoalscorerPointsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_PointsForRounds_Rounds", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_PointsForRounds_Rounds", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_PointsForRounds_Rounds", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_PointsForRounds_Rounds", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("BetsModel.FK_PointsForRounds_Rounds", "Round", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_PointsForRounds_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BetsModel.FK_PointsForRounds_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BetsModel.FK_PointsForRounds_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BetsModel.FK_PointsForRounds_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BetsModel.FK_PointsForRounds_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BetsModel", Name="Round")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Round : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Round object.
        /// </summary>
        /// <param name="roundID">Initial value of the RoundID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="closed">Initial value of the Closed property.</param>
        public static Round CreateRound(global::System.Int32 roundID, global::System.String name, global::System.Boolean closed)
        {
            Round round = new Round();
            round.RoundID = roundID;
            round.Name = name;
            round.Closed = closed;
            return round;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundID
        {
            get
            {
                return _RoundID;
            }
            set
            {
                if (_RoundID != value)
                {
                    OnRoundIDChanging(value);
                    ReportPropertyChanging("RoundID");
                    _RoundID = StructuralObject.SetValidValue(value, "RoundID");
                    ReportPropertyChanged("RoundID");
                    OnRoundIDChanged();
                }
            }
        }
        private global::System.Int32 _RoundID;
        partial void OnRoundIDChanging(global::System.Int32 value);
        partial void OnRoundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Closed
        {
            get
            {
                return _Closed;
            }
            set
            {
                OnClosedChanging(value);
                ReportPropertyChanging("Closed");
                _Closed = StructuralObject.SetValidValue(value, "Closed");
                ReportPropertyChanged("Closed");
                OnClosedChanged();
            }
        }
        private global::System.Boolean _Closed;
        partial void OnClosedChanging(global::System.Boolean value);
        partial void OnClosedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_GoalscorersForRounds_Rounds", "GoalscorersForRound")]
        public EntityCollection<GoalscorersForRound> GoalscorersForRounds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoalscorersForRound>("BetsModel.FK_GoalscorersForRounds_Rounds", "GoalscorersForRound");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoalscorersForRound>("BetsModel.FK_GoalscorersForRounds_Rounds", "GoalscorersForRound", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_Matches_Rounds", "Match")]
        public EntityCollection<Match> Matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("BetsModel.FK_Matches_Rounds", "Match");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("BetsModel.FK_Matches_Rounds", "Match", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_PointsForRounds_Rounds", "PointsForRound")]
        public EntityCollection<PointsForRound> PointsForRounds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PointsForRound>("BetsModel.FK_PointsForRounds_Rounds", "PointsForRound");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PointsForRound>("BetsModel.FK_PointsForRounds_Rounds", "PointsForRound", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_Settings_Rounds", "Setting")]
        public EntityCollection<Setting> Settings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Setting>("BetsModel.FK_Settings_Rounds", "Setting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Setting>("BetsModel.FK_Settings_Rounds", "Setting", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BetsModel", Name="Setting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Setting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Setting object.
        /// </summary>
        /// <param name="settingID">Initial value of the SettingID property.</param>
        /// <param name="currentRoundID">Initial value of the CurrentRoundID property.</param>
        /// <param name="firstMatchDate">Initial value of the FirstMatchDate property.</param>
        /// <param name="scoreMultiplier">Initial value of the ScoreMultiplier property.</param>
        /// <param name="roundGoalMultiplier">Initial value of the RoundGoalMultiplier property.</param>
        /// <param name="bonusMultiplier">Initial value of the BonusMultiplier property.</param>
        public static Setting CreateSetting(global::System.Int32 settingID, global::System.Int32 currentRoundID, global::System.DateTime firstMatchDate, global::System.Double scoreMultiplier, global::System.Double roundGoalMultiplier, global::System.Double bonusMultiplier)
        {
            Setting setting = new Setting();
            setting.SettingID = settingID;
            setting.CurrentRoundID = currentRoundID;
            setting.FirstMatchDate = firstMatchDate;
            setting.ScoreMultiplier = scoreMultiplier;
            setting.RoundGoalMultiplier = roundGoalMultiplier;
            setting.BonusMultiplier = bonusMultiplier;
            return setting;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SettingID
        {
            get
            {
                return _SettingID;
            }
            set
            {
                if (_SettingID != value)
                {
                    OnSettingIDChanging(value);
                    ReportPropertyChanging("SettingID");
                    _SettingID = StructuralObject.SetValidValue(value, "SettingID");
                    ReportPropertyChanged("SettingID");
                    OnSettingIDChanged();
                }
            }
        }
        private global::System.Int32 _SettingID;
        partial void OnSettingIDChanging(global::System.Int32 value);
        partial void OnSettingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrentRoundID
        {
            get
            {
                return _CurrentRoundID;
            }
            set
            {
                OnCurrentRoundIDChanging(value);
                ReportPropertyChanging("CurrentRoundID");
                _CurrentRoundID = StructuralObject.SetValidValue(value, "CurrentRoundID");
                ReportPropertyChanged("CurrentRoundID");
                OnCurrentRoundIDChanged();
            }
        }
        private global::System.Int32 _CurrentRoundID;
        partial void OnCurrentRoundIDChanging(global::System.Int32 value);
        partial void OnCurrentRoundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FirstMatchDate
        {
            get
            {
                return _FirstMatchDate;
            }
            set
            {
                OnFirstMatchDateChanging(value);
                ReportPropertyChanging("FirstMatchDate");
                _FirstMatchDate = StructuralObject.SetValidValue(value, "FirstMatchDate");
                ReportPropertyChanged("FirstMatchDate");
                OnFirstMatchDateChanged();
            }
        }
        private global::System.DateTime _FirstMatchDate;
        partial void OnFirstMatchDateChanging(global::System.DateTime value);
        partial void OnFirstMatchDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ScoreMultiplier
        {
            get
            {
                return _ScoreMultiplier;
            }
            set
            {
                OnScoreMultiplierChanging(value);
                ReportPropertyChanging("ScoreMultiplier");
                _ScoreMultiplier = StructuralObject.SetValidValue(value, "ScoreMultiplier");
                ReportPropertyChanged("ScoreMultiplier");
                OnScoreMultiplierChanged();
            }
        }
        private global::System.Double _ScoreMultiplier;
        partial void OnScoreMultiplierChanging(global::System.Double value);
        partial void OnScoreMultiplierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RoundGoalMultiplier
        {
            get
            {
                return _RoundGoalMultiplier;
            }
            set
            {
                OnRoundGoalMultiplierChanging(value);
                ReportPropertyChanging("RoundGoalMultiplier");
                _RoundGoalMultiplier = StructuralObject.SetValidValue(value, "RoundGoalMultiplier");
                ReportPropertyChanged("RoundGoalMultiplier");
                OnRoundGoalMultiplierChanged();
            }
        }
        private global::System.Double _RoundGoalMultiplier;
        partial void OnRoundGoalMultiplierChanging(global::System.Double value);
        partial void OnRoundGoalMultiplierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BonusMultiplier
        {
            get
            {
                return _BonusMultiplier;
            }
            set
            {
                OnBonusMultiplierChanging(value);
                ReportPropertyChanging("BonusMultiplier");
                _BonusMultiplier = StructuralObject.SetValidValue(value, "BonusMultiplier");
                ReportPropertyChanged("BonusMultiplier");
                OnBonusMultiplierChanged();
            }
        }
        private global::System.Double _BonusMultiplier;
        partial void OnBonusMultiplierChanging(global::System.Double value);
        partial void OnBonusMultiplierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastNotificationRoundID
        {
            get
            {
                return _LastNotificationRoundID;
            }
            set
            {
                OnLastNotificationRoundIDChanging(value);
                ReportPropertyChanging("LastNotificationRoundID");
                _LastNotificationRoundID = StructuralObject.SetValidValue(value, "LastNotificationRoundID");
                ReportPropertyChanged("LastNotificationRoundID");
                OnLastNotificationRoundIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LastNotificationRoundID;
        partial void OnLastNotificationRoundIDChanging(Nullable<global::System.Int32> value);
        partial void OnLastNotificationRoundIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_Settings_Rounds", "Round")]
        public Round Round
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_Settings_Rounds", "Round").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_Settings_Rounds", "Round").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Round> RoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Round>("BetsModel.FK_Settings_Rounds", "Round");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Round>("BetsModel.FK_Settings_Rounds", "Round", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BetsModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="teamID">Initial value of the TeamID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="flagPrefix">Initial value of the FlagPrefix property.</param>
        /// <param name="insertedDate">Initial value of the InsertedDate property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static Team CreateTeam(global::System.Int32 teamID, global::System.String name, global::System.String flagPrefix, global::System.DateTime insertedDate, global::System.Boolean active)
        {
            Team team = new Team();
            team.TeamID = teamID;
            team.Name = name;
            team.FlagPrefix = flagPrefix;
            team.InsertedDate = insertedDate;
            team.Active = active;
            return team;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                if (_TeamID != value)
                {
                    OnTeamIDChanging(value);
                    ReportPropertyChanging("TeamID");
                    _TeamID = StructuralObject.SetValidValue(value, "TeamID");
                    ReportPropertyChanged("TeamID");
                    OnTeamIDChanged();
                }
            }
        }
        private global::System.Int32 _TeamID;
        partial void OnTeamIDChanging(global::System.Int32 value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlagPrefix
        {
            get
            {
                return _FlagPrefix;
            }
            set
            {
                OnFlagPrefixChanging(value);
                ReportPropertyChanging("FlagPrefix");
                _FlagPrefix = StructuralObject.SetValidValue(value, false, "FlagPrefix");
                ReportPropertyChanged("FlagPrefix");
                OnFlagPrefixChanged();
            }
        }
        private global::System.String _FlagPrefix;
        partial void OnFlagPrefixChanging(global::System.String value);
        partial void OnFlagPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertedDate
        {
            get
            {
                return _InsertedDate;
            }
            set
            {
                OnInsertedDateChanging(value);
                ReportPropertyChanging("InsertedDate");
                _InsertedDate = StructuralObject.SetValidValue(value, "InsertedDate");
                ReportPropertyChanged("InsertedDate");
                OnInsertedDateChanged();
            }
        }
        private global::System.DateTime _InsertedDate;
        partial void OnInsertedDateChanging(global::System.DateTime value);
        partial void OnInsertedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Group
        {
            get
            {
                return _Group;
            }
            set
            {
                OnGroupChanging(value);
                ReportPropertyChanging("Group");
                _Group = StructuralObject.SetValidValue(value, true, "Group");
                ReportPropertyChanged("Group");
                OnGroupChanged();
            }
        }
        private global::System.String _Group;
        partial void OnGroupChanging(global::System.String value);
        partial void OnGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value, "Points");
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private Nullable<global::System.Int32> _Points;
        partial void OnPointsChanging(Nullable<global::System.Int32> value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalID
        {
            get
            {
                return _ExternalID;
            }
            set
            {
                OnExternalIDChanging(value);
                ReportPropertyChanging("ExternalID");
                _ExternalID = StructuralObject.SetValidValue(value, true, "ExternalID");
                ReportPropertyChanged("ExternalID");
                OnExternalIDChanged();
            }
        }
        private global::System.String _ExternalID;
        partial void OnExternalIDChanging(global::System.String value);
        partial void OnExternalIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_GlobalBets_Teams", "GlobalBet")]
        public EntityCollection<GlobalBet> GlobalBets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GlobalBet>("BetsModel.FK_GlobalBets_Teams", "GlobalBet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GlobalBet>("BetsModel.FK_GlobalBets_Teams", "GlobalBet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_LNXBets_Matches_LNXBets_Matches", "Match")]
        public EntityCollection<Match> Matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("BetsModel.FK_LNXBets_Matches_LNXBets_Matches", "Match");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("BetsModel.FK_LNXBets_Matches_LNXBets_Matches", "Match", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_LNXBets_Matches_LNXBets_Teams", "Match")]
        public EntityCollection<Match> Matches1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("BetsModel.FK_LNXBets_Matches_LNXBets_Teams", "Match");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("BetsModel.FK_LNXBets_Matches_LNXBets_Teams", "Match", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BetsModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="insertedDate">Initial value of the InsertedDate property.</param>
        /// <param name="profileID">Initial value of the ProfileID property.</param>
        /// <param name="pointsWon">Initial value of the PointsWon property.</param>
        /// <param name="pointsWonBonus">Initial value of the PointsWonBonus property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="bonus">Initial value of the Bonus property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String username, global::System.String password, global::System.String passwordSalt, global::System.DateTime insertedDate, global::System.Int32 profileID, global::System.Int32 pointsWon, global::System.Int32 pointsWonBonus, global::System.String displayName, global::System.Int32 bonus)
        {
            User user = new User();
            user.UserID = userID;
            user.Username = username;
            user.Password = password;
            user.PasswordSalt = passwordSalt;
            user.InsertedDate = insertedDate;
            user.ProfileID = profileID;
            user.PointsWon = pointsWon;
            user.PointsWonBonus = pointsWonBonus;
            user.DisplayName = displayName;
            user.Bonus = bonus;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, "UserID");
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false, "PasswordSalt");
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsertedDate
        {
            get
            {
                return _InsertedDate;
            }
            set
            {
                OnInsertedDateChanging(value);
                ReportPropertyChanging("InsertedDate");
                _InsertedDate = StructuralObject.SetValidValue(value, "InsertedDate");
                ReportPropertyChanged("InsertedDate");
                OnInsertedDateChanged();
            }
        }
        private global::System.DateTime _InsertedDate;
        partial void OnInsertedDateChanging(global::System.DateTime value);
        partial void OnInsertedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileID
        {
            get
            {
                return _ProfileID;
            }
            set
            {
                OnProfileIDChanging(value);
                ReportPropertyChanging("ProfileID");
                _ProfileID = StructuralObject.SetValidValue(value, "ProfileID");
                ReportPropertyChanged("ProfileID");
                OnProfileIDChanged();
            }
        }
        private global::System.Int32 _ProfileID;
        partial void OnProfileIDChanging(global::System.Int32 value);
        partial void OnProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PointsWon
        {
            get
            {
                return _PointsWon;
            }
            set
            {
                OnPointsWonChanging(value);
                ReportPropertyChanging("PointsWon");
                _PointsWon = StructuralObject.SetValidValue(value, "PointsWon");
                ReportPropertyChanged("PointsWon");
                OnPointsWonChanged();
            }
        }
        private global::System.Int32 _PointsWon;
        partial void OnPointsWonChanging(global::System.Int32 value);
        partial void OnPointsWonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PointsWonBonus
        {
            get
            {
                return _PointsWonBonus;
            }
            set
            {
                OnPointsWonBonusChanging(value);
                ReportPropertyChanging("PointsWonBonus");
                _PointsWonBonus = StructuralObject.SetValidValue(value, "PointsWonBonus");
                ReportPropertyChanged("PointsWonBonus");
                OnPointsWonBonusChanged();
            }
        }
        private global::System.Int32 _PointsWonBonus;
        partial void OnPointsWonBonusChanging(global::System.Int32 value);
        partial void OnPointsWonBonusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Bonus
        {
            get
            {
                return _Bonus;
            }
            set
            {
                OnBonusChanging(value);
                ReportPropertyChanging("Bonus");
                _Bonus = StructuralObject.SetValidValue(value, "Bonus");
                ReportPropertyChanged("Bonus");
                OnBonusChanged();
            }
        }
        private global::System.Int32 _Bonus;
        partial void OnBonusChanging(global::System.Int32 value);
        partial void OnBonusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_GlobalBets_Users", "GlobalBet")]
        public EntityCollection<GlobalBet> GlobalBets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GlobalBet>("BetsModel.FK_GlobalBets_Users", "GlobalBet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GlobalBet>("BetsModel.FK_GlobalBets_Users", "GlobalBet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_LNXBets_Bet_LNXBets_Users", "MatchBet")]
        public EntityCollection<MatchBet> MatchBets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MatchBet>("BetsModel.FK_LNXBets_Bet_LNXBets_Users", "MatchBet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MatchBet>("BetsModel.FK_LNXBets_Bet_LNXBets_Users", "MatchBet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BetsModel", "FK_PointsForRounds_Users", "PointsForRound")]
        public EntityCollection<PointsForRound> PointsForRounds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PointsForRound>("BetsModel.FK_PointsForRounds_Users", "PointsForRound");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PointsForRound>("BetsModel.FK_PointsForRounds_Users", "PointsForRound", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
