@{ Layout = Url.Layout(""); }

@section ExternalsJS {

	@MvcHtmlString.Create(SquishIt.Framework.Bundle.JavaScript()
		.Add(Url.ScriptDev("pages/matchesforround"))
		.Add(Url.ScriptDev("pages/singlebet"))
		.Render("~/content/combined/combined-mybets-#.min.js"))
}

@Html.Partial(Url.Template("MatchBet"))

<div class="clearfix @if (ViewBag.RoundExpired) { <text>round-expired</text> } @if (ViewBag.Expired) { <text>global-expired</text> }">

	<div id="main-container">
		<div class="global-bets">

			<div class="@(ViewBag.Expired ? "listing-single" : "") clearfix">
				<h1>Top Goalscorer</h1>

				<div class="goalscorer">

					@if (!ViewBag.Expired) {
						<h2>My Bet</h2>
					}

					<div class="goalscorer-selected">
						@if (ViewBag.GlobalGoalscorerBet != null) {
							Html.RenderPartial("Goalscorer", (GoalscorerModel)ViewBag.GlobalGoalscorerBet);
						}
						else {
							<h3>NO BET</h3>
						}
					</div>
				</div>
			
				@if (!ViewBag.Expired) {
					Html.RenderAction("Index", "Goalscorer");
				}
			</div>

		
			<div class="@(ViewBag.Expired ? "listing-single" : "")" id="winner-container">

				<h1>Winner</h1>
	   
				<div class="winner">

					@if (!ViewBag.Expired) {
						<h2>My Bet</h2>
					}

					<div class="winner-selected">
						@if (ViewBag.WinnerBet != null) {
							Html.RenderPartial("Winner", (TeamModel)ViewBag.WinnerBet);
						}
						else {
							<h3>NO BET</h3>
						}
					</div>
				</div>
			
				@if (!ViewBag.Expired) {
					Html.RenderAction("Index", "Winner");
				}
			</div>

		</div>
	</div>

	<input type="hidden" id="fld-max-bonus" value="@ViewBag.MaxBonusPerMatch" />
</div>
