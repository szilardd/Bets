#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bets.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Bets")]
	public partial class BetsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMatch(Match instance);
    partial void UpdateMatch(Match instance);
    partial void DeleteMatch(Match instance);
    partial void InsertPlayer(Player instance);
    partial void UpdatePlayer(Player instance);
    partial void DeletePlayer(Player instance);
    partial void InsertTeam(Team instance);
    partial void UpdateTeam(Team instance);
    partial void DeleteTeam(Team instance);
    partial void InsertGlobalBet(GlobalBet instance);
    partial void UpdateGlobalBet(GlobalBet instance);
    partial void DeleteGlobalBet(GlobalBet instance);
    partial void InsertGoalscorerForRound(GoalscorerForRound instance);
    partial void UpdateGoalscorerForRound(GoalscorerForRound instance);
    partial void DeleteGoalscorerForRound(GoalscorerForRound instance);
    partial void InsertMatchBet(MatchBet instance);
    partial void UpdateMatchBet(MatchBet instance);
    partial void DeleteMatchBet(MatchBet instance);
    partial void InsertRound(Round instance);
    partial void UpdateRound(Round instance);
    partial void DeleteRound(Round instance);
    partial void InsertPointsForRound(PointsForRound instance);
    partial void UpdatePointsForRound(PointsForRound instance);
    partial void DeletePointsForRound(PointsForRound instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public BetsDataContext() : 
				base(global::Bets.Data.Properties.Settings.Default.BetsConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public BetsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BetsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BetsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BetsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Match> Matches
		{
			get
			{
				return this.GetTable<Match>();
			}
		}
		
		public System.Data.Linq.Table<Player> Players
		{
			get
			{
				return this.GetTable<Player>();
			}
		}
		
		public System.Data.Linq.Table<Team> Teams
		{
			get
			{
				return this.GetTable<Team>();
			}
		}
		
		public System.Data.Linq.Table<GlobalBet> GlobalBets
		{
			get
			{
				return this.GetTable<GlobalBet>();
			}
		}
		
		public System.Data.Linq.Table<GoalscorerForRound> GoalscorerForRounds
		{
			get
			{
				return this.GetTable<GoalscorerForRound>();
			}
		}
		
		public System.Data.Linq.Table<MatchBet> MatchBets
		{
			get
			{
				return this.GetTable<MatchBet>();
			}
		}
		
		public System.Data.Linq.Table<Round> Rounds
		{
			get
			{
				return this.GetTable<Round>();
			}
		}
		
		public System.Data.Linq.Table<PointsForRound> PointsForRounds
		{
			get
			{
				return this.GetTable<PointsForRound>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveWinnerBet")]
		public int SaveWinnerBet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeamID", DbType="Int")] System.Nullable<int> teamID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, teamID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveGoalscorerBet")]
		public int SaveGoalscorerBet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlayerID", DbType="Int")] System.Nullable<int> playerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, playerID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveGoalscorerForRoundBet")]
		public int SaveGoalscorerForRoundBet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GoalscorerID", DbType="Int")] System.Nullable<int> goalscorerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, goalscorerID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveMatchBet")]
		public int SaveMatchBet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MatchID", DbType="Int")] System.Nullable<int> matchID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstTeamGoals", DbType="Int")] System.Nullable<int> firstTeamGoals, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecondTeamGoals", DbType="Int")] System.Nullable<int> secondTeamGoals, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Bonus", DbType="Int")] System.Nullable<int> bonus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HourLimit", DbType="Int")] System.Nullable<int> hourLimit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), matchID, userID, firstTeamGoals, secondTeamGoals, bonus, hourLimit);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveMatchResult")]
		public int SaveMatchResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MatchID", DbType="Int")] System.Nullable<int> matchID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstTeamGoals", DbType="Int")] System.Nullable<int> firstTeamGoals, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SecondTeamGoals", DbType="Int")] System.Nullable<int> secondTeamGoals)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), matchID, firstTeamGoals, secondTeamGoals);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllGroupStandings")]
		public ISingleResult<GetAllGroupStandingsResult> GetAllGroupStandings()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllGroupStandingsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveGoalscorerForCurrentRound")]
		public int SaveGoalscorerForCurrentRound([global::System.Data.Linq.Mapping.ParameterAttribute(Name="GoalscorerID", DbType="Int")] System.Nullable<int> goalscorerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Goals", DbType="Int")] System.Nullable<int> goals)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), goalscorerID, goals);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddRound")]
		public int AddRound([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(50)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetUserPointsForRound")]
		public int SetUserPointsForRound([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoundID", DbType="Int")] System.Nullable<int> roundID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roundID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveTeam")]
		public int RemoveTeam([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeamID", DbType="Int")] System.Nullable<int> teamID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), teamID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemovePlayer")]
		public int RemovePlayer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlayerID", DbType="Int")] System.Nullable<int> playerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), playerID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CloseRound")]
		public int CloseRound([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoundID", DbType="Int")] System.Nullable<int> roundID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roundID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateLastNotificationRoundID")]
		public int UpdateLastNotificationRoundID()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateUser")]
		public int UpdateUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayName", DbType="VarChar(50)")] string displayName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldPassword", DbType="VarChar(50)")] string oldPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewPassword", DbType="VarChar(50)")] string newPassword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, displayName, email, oldPassword, newPassword);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Matches")]
	public partial class Match : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MatchID;
		
		private int _FirstTeamID;
		
		private int _SecondTeamID;
		
		private System.DateTime _Date;
		
		private int _Points1;
		
		private int _PointsX;
		
		private int _Points2;
		
		private int _Round;
		
		private System.Nullable<int> _FirstTeamGoals;
		
		private System.Nullable<int> _SecondTeamGoals;
		
		private System.Nullable<int> _Result;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMatchIDChanging(int value);
    partial void OnMatchIDChanged();
    partial void OnFirstTeamIDChanging(int value);
    partial void OnFirstTeamIDChanged();
    partial void OnSecondTeamIDChanging(int value);
    partial void OnSecondTeamIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnPoints1Changing(int value);
    partial void OnPoints1Changed();
    partial void OnPointsXChanging(int value);
    partial void OnPointsXChanged();
    partial void OnPoints2Changing(int value);
    partial void OnPoints2Changed();
    partial void OnRoundIDChanging(int value);
    partial void OnRoundIDChanged();
    partial void OnFirstTeamGoalsChanging(System.Nullable<int> value);
    partial void OnFirstTeamGoalsChanged();
    partial void OnSecondTeamGoalsChanging(System.Nullable<int> value);
    partial void OnSecondTeamGoalsChanged();
    partial void OnResultChanging(System.Nullable<int> value);
    partial void OnResultChanged();
    #endregion
		
		public Match()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MatchID
		{
			get
			{
				return this._MatchID;
			}
			set
			{
				if ((this._MatchID != value))
				{
					this.OnMatchIDChanging(value);
					this.SendPropertyChanging();
					this._MatchID = value;
					this.SendPropertyChanged("MatchID");
					this.OnMatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstTeamID", DbType="Int NOT NULL")]
		public int FirstTeamID
		{
			get
			{
				return this._FirstTeamID;
			}
			set
			{
				if ((this._FirstTeamID != value))
				{
					this.OnFirstTeamIDChanging(value);
					this.SendPropertyChanging();
					this._FirstTeamID = value;
					this.SendPropertyChanged("FirstTeamID");
					this.OnFirstTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondTeamID", DbType="Int NOT NULL")]
		public int SecondTeamID
		{
			get
			{
				return this._SecondTeamID;
			}
			set
			{
				if ((this._SecondTeamID != value))
				{
					this.OnSecondTeamIDChanging(value);
					this.SendPropertyChanging();
					this._SecondTeamID = value;
					this.SendPropertyChanged("SecondTeamID");
					this.OnSecondTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points1", DbType="Int NOT NULL")]
		public int Points1
		{
			get
			{
				return this._Points1;
			}
			set
			{
				if ((this._Points1 != value))
				{
					this.OnPoints1Changing(value);
					this.SendPropertyChanging();
					this._Points1 = value;
					this.SendPropertyChanged("Points1");
					this.OnPoints1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsX", DbType="Int NOT NULL")]
		public int PointsX
		{
			get
			{
				return this._PointsX;
			}
			set
			{
				if ((this._PointsX != value))
				{
					this.OnPointsXChanging(value);
					this.SendPropertyChanging();
					this._PointsX = value;
					this.SendPropertyChanged("PointsX");
					this.OnPointsXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points2", DbType="Int NOT NULL")]
		public int Points2
		{
			get
			{
				return this._Points2;
			}
			set
			{
				if ((this._Points2 != value))
				{
					this.OnPoints2Changing(value);
					this.SendPropertyChanging();
					this._Points2 = value;
					this.SendPropertyChanged("Points2");
					this.OnPoints2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Round", DbType="Int NOT NULL")]
		public int RoundID
		{
			get
			{
				return this._Round;
			}
			set
			{
				if ((this._Round != value))
				{
					this.OnRoundIDChanging(value);
					this.SendPropertyChanging();
					this._Round = value;
					this.SendPropertyChanged("RoundID");
					this.OnRoundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstTeamGoals", DbType="Int")]
		public System.Nullable<int> FirstTeamGoals
		{
			get
			{
				return this._FirstTeamGoals;
			}
			set
			{
				if ((this._FirstTeamGoals != value))
				{
					this.OnFirstTeamGoalsChanging(value);
					this.SendPropertyChanging();
					this._FirstTeamGoals = value;
					this.SendPropertyChanged("FirstTeamGoals");
					this.OnFirstTeamGoalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondTeamGoals", DbType="Int")]
		public System.Nullable<int> SecondTeamGoals
		{
			get
			{
				return this._SecondTeamGoals;
			}
			set
			{
				if ((this._SecondTeamGoals != value))
				{
					this.OnSecondTeamGoalsChanging(value);
					this.SendPropertyChanging();
					this._SecondTeamGoals = value;
					this.SendPropertyChanged("SecondTeamGoals");
					this.OnSecondTeamGoalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Int")]
		public System.Nullable<int> Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Players")]
	public partial class Player : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlayerID;
		
		private int _TeamID;
		
		private string _Name;
		
		private string _ImageURL;
		
		private System.DateTime _InsertedDate;
		
		private bool _IsDeleted;
		
		private int _Points;
		
		private int _GoalsScored;
		
		private string _ExternalID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlayerIDChanging(int value);
    partial void OnPlayerIDChanged();
    partial void OnTeamIDChanging(int value);
    partial void OnTeamIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageURLChanging(string value);
    partial void OnImageURLChanged();
    partial void OnInsertedDateChanging(System.DateTime value);
    partial void OnInsertedDateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnPointsChanging(int value);
    partial void OnPointsChanged();
    partial void OnGoalsScoredChanging(int value);
    partial void OnGoalsScoredChanged();
    partial void OnExternalIDChanging(string value);
    partial void OnExternalIDChanged();
    #endregion
		
		public Player()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlayerID
		{
			get
			{
				return this._PlayerID;
			}
			set
			{
				if ((this._PlayerID != value))
				{
					this.OnPlayerIDChanging(value);
					this.SendPropertyChanging();
					this._PlayerID = value;
					this.SendPropertyChanged("PlayerID");
					this.OnPlayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int NOT NULL")]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageURL", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ImageURL
		{
			get
			{
				return this._ImageURL;
			}
			set
			{
				if ((this._ImageURL != value))
				{
					this.OnImageURLChanging(value);
					this.SendPropertyChanging();
					this._ImageURL = value;
					this.SendPropertyChanged("ImageURL");
					this.OnImageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertedDate
		{
			get
			{
				return this._InsertedDate;
			}
			set
			{
				if ((this._InsertedDate != value))
				{
					this.OnInsertedDateChanging(value);
					this.SendPropertyChanging();
					this._InsertedDate = value;
					this.SendPropertyChanged("InsertedDate");
					this.OnInsertedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Active
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Int NOT NULL")]
		public int Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				if ((this._Points != value))
				{
					this.OnPointsChanging(value);
					this.SendPropertyChanging();
					this._Points = value;
					this.SendPropertyChanged("Points");
					this.OnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalsScored", DbType="Int NOT NULL")]
		public int GoalsScored
		{
			get
			{
				return this._GoalsScored;
			}
			set
			{
				if ((this._GoalsScored != value))
				{
					this.OnGoalsScoredChanging(value);
					this.SendPropertyChanging();
					this._GoalsScored = value;
					this.SendPropertyChanged("GoalsScored");
					this.OnGoalsScoredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalID", DbType="VarChar(10)")]
		public string ExternalID
		{
			get
			{
				return this._ExternalID;
			}
			set
			{
				if ((this._ExternalID != value))
				{
					this.OnExternalIDChanging(value);
					this.SendPropertyChanging();
					this._ExternalID = value;
					this.SendPropertyChanged("ExternalID");
					this.OnExternalIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teams")]
	public partial class Team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeamID;
		
		private string _Name;
		
		private string _FlagPrefix;
		
		private System.DateTime _InsertedDate;
		
		private bool _Active;
		
		private string _Group;
		
		private System.Nullable<int> _Points;
		
		private string _ExternalID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamIDChanging(int value);
    partial void OnTeamIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFlagPrefixChanging(string value);
    partial void OnFlagPrefixChanged();
    partial void OnInsertedDateChanging(System.DateTime value);
    partial void OnInsertedDateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnPointsChanging(System.Nullable<int> value);
    partial void OnPointsChanged();
    partial void OnExternalIDChanging(string value);
    partial void OnExternalIDChanged();
    #endregion
		
		public Team()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlagPrefix", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string FlagPrefix
		{
			get
			{
				return this._FlagPrefix;
			}
			set
			{
				if ((this._FlagPrefix != value))
				{
					this.OnFlagPrefixChanging(value);
					this.SendPropertyChanging();
					this._FlagPrefix = value;
					this.SendPropertyChanged("FlagPrefix");
					this.OnFlagPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertedDate
		{
			get
			{
				return this._InsertedDate;
			}
			set
			{
				if ((this._InsertedDate != value))
				{
					this.OnInsertedDateChanging(value);
					this.SendPropertyChanging();
					this._InsertedDate = value;
					this.SendPropertyChanged("InsertedDate");
					this.OnInsertedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="VarChar(1)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Int")]
		public System.Nullable<int> Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				if ((this._Points != value))
				{
					this.OnPointsChanging(value);
					this.SendPropertyChanging();
					this._Points = value;
					this.SendPropertyChanged("Points");
					this.OnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalID", DbType="VarChar(10)")]
		public string ExternalID
		{
			get
			{
				return this._ExternalID;
			}
			set
			{
				if ((this._ExternalID != value))
				{
					this.OnExternalIDChanging(value);
					this.SendPropertyChanging();
					this._ExternalID = value;
					this.SendPropertyChanged("ExternalID");
					this.OnExternalIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlobalBets")]
	public partial class GlobalBet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BetID;
		
		private int _UserID;
		
		private System.Nullable<int> _WinnerTeamID;
		
		private System.Nullable<int> _GoalscorerID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBetIDChanging(int value);
    partial void OnBetIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnWinnerTeamIDChanging(System.Nullable<int> value);
    partial void OnWinnerTeamIDChanged();
    partial void OnGoalscorerIDChanging(System.Nullable<int> value);
    partial void OnGoalscorerIDChanged();
    #endregion
		
		public GlobalBet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BetID
		{
			get
			{
				return this._BetID;
			}
			set
			{
				if ((this._BetID != value))
				{
					this.OnBetIDChanging(value);
					this.SendPropertyChanging();
					this._BetID = value;
					this.SendPropertyChanged("BetID");
					this.OnBetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerTeamID", DbType="Int")]
		public System.Nullable<int> WinnerTeamID
		{
			get
			{
				return this._WinnerTeamID;
			}
			set
			{
				if ((this._WinnerTeamID != value))
				{
					this.OnWinnerTeamIDChanging(value);
					this.SendPropertyChanging();
					this._WinnerTeamID = value;
					this.SendPropertyChanged("WinnerTeamID");
					this.OnWinnerTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalscorerID", DbType="Int")]
		public System.Nullable<int> GoalscorerID
		{
			get
			{
				return this._GoalscorerID;
			}
			set
			{
				if ((this._GoalscorerID != value))
				{
					this.OnGoalscorerIDChanging(value);
					this.SendPropertyChanging();
					this._GoalscorerID = value;
					this.SendPropertyChanged("GoalscorerID");
					this.OnGoalscorerIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoalscorersForRounds")]
	public partial class GoalscorerForRound : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoundID;
		
		private int _GoalscorerID;
		
		private int _Goals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoundIDChanging(int value);
    partial void OnRoundIDChanged();
    partial void OnGoalscorerIDChanging(int value);
    partial void OnGoalscorerIDChanged();
    partial void OnGoalsChanging(int value);
    partial void OnGoalsChanged();
    #endregion
		
		public GoalscorerForRound()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoundID
		{
			get
			{
				return this._RoundID;
			}
			set
			{
				if ((this._RoundID != value))
				{
					this.OnRoundIDChanging(value);
					this.SendPropertyChanging();
					this._RoundID = value;
					this.SendPropertyChanged("RoundID");
					this.OnRoundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalscorerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GoalscorerID
		{
			get
			{
				return this._GoalscorerID;
			}
			set
			{
				if ((this._GoalscorerID != value))
				{
					this.OnGoalscorerIDChanging(value);
					this.SendPropertyChanging();
					this._GoalscorerID = value;
					this.SendPropertyChanged("GoalscorerID");
					this.OnGoalscorerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goals", DbType="INT NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Goals
		{
			get
			{
				return this._Goals;
			}
			set
			{
				if ((this._Goals != value))
				{
					this.OnGoalsChanging(value);
					this.SendPropertyChanging();
					this._Goals = value;
					this.SendPropertyChanged("Goals");
					this.OnGoalsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MatchBets")]
	public partial class MatchBet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BetID;
		
		private int _MatchID;
		
		private int _UserID;
		
		private int _FirstTeamGoals;
		
		private int _SecondTeamGoals;
		
		private int _Result;
		
		private System.Nullable<int> _PointsWon;
		
		private System.Nullable<int> _WinTypeID;
		
		private int _Bonus;
		
		private int _PointsWonBonus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBetIDChanging(int value);
    partial void OnBetIDChanged();
    partial void OnMatchIDChanging(int value);
    partial void OnMatchIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFirstTeamGoalsChanging(int value);
    partial void OnFirstTeamGoalsChanged();
    partial void OnSecondTeamGoalsChanging(int value);
    partial void OnSecondTeamGoalsChanged();
    partial void OnResultChanging(int value);
    partial void OnResultChanged();
    partial void OnPointsWonChanging(System.Nullable<int> value);
    partial void OnPointsWonChanged();
    partial void OnWinTypeIDChanging(System.Nullable<int> value);
    partial void OnWinTypeIDChanged();
    partial void OnBonusChanging(int value);
    partial void OnBonusChanged();
    partial void OnPointsWonBonusChanging(int value);
    partial void OnPointsWonBonusChanged();
    #endregion
		
		public MatchBet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BetID
		{
			get
			{
				return this._BetID;
			}
			set
			{
				if ((this._BetID != value))
				{
					this.OnBetIDChanging(value);
					this.SendPropertyChanging();
					this._BetID = value;
					this.SendPropertyChanged("BetID");
					this.OnBetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchID", DbType="Int NOT NULL")]
		public int MatchID
		{
			get
			{
				return this._MatchID;
			}
			set
			{
				if ((this._MatchID != value))
				{
					this.OnMatchIDChanging(value);
					this.SendPropertyChanging();
					this._MatchID = value;
					this.SendPropertyChanged("MatchID");
					this.OnMatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstTeamGoals", DbType="Int NOT NULL")]
		public int FirstTeamGoals
		{
			get
			{
				return this._FirstTeamGoals;
			}
			set
			{
				if ((this._FirstTeamGoals != value))
				{
					this.OnFirstTeamGoalsChanging(value);
					this.SendPropertyChanging();
					this._FirstTeamGoals = value;
					this.SendPropertyChanged("FirstTeamGoals");
					this.OnFirstTeamGoalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondTeamGoals", DbType="Int NOT NULL")]
		public int SecondTeamGoals
		{
			get
			{
				return this._SecondTeamGoals;
			}
			set
			{
				if ((this._SecondTeamGoals != value))
				{
					this.OnSecondTeamGoalsChanging(value);
					this.SendPropertyChanging();
					this._SecondTeamGoals = value;
					this.SendPropertyChanged("SecondTeamGoals");
					this.OnSecondTeamGoalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Int NOT NULL")]
		public int Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsWon", DbType="Int")]
		public System.Nullable<int> PointsWon
		{
			get
			{
				return this._PointsWon;
			}
			set
			{
				if ((this._PointsWon != value))
				{
					this.OnPointsWonChanging(value);
					this.SendPropertyChanging();
					this._PointsWon = value;
					this.SendPropertyChanged("PointsWon");
					this.OnPointsWonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinTypeID", DbType="Int")]
		public System.Nullable<int> WinTypeID
		{
			get
			{
				return this._WinTypeID;
			}
			set
			{
				if ((this._WinTypeID != value))
				{
					this.OnWinTypeIDChanging(value);
					this.SendPropertyChanging();
					this._WinTypeID = value;
					this.SendPropertyChanged("WinTypeID");
					this.OnWinTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonus", DbType="INT NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				if ((this._Bonus != value))
				{
					this.OnBonusChanging(value);
					this.SendPropertyChanging();
					this._Bonus = value;
					this.SendPropertyChanged("Bonus");
					this.OnBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsWonBonus", DbType="INT NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PointsWonBonus
		{
			get
			{
				return this._PointsWonBonus;
			}
			set
			{
				if ((this._PointsWonBonus != value))
				{
					this.OnPointsWonBonusChanging(value);
					this.SendPropertyChanging();
					this._PointsWonBonus = value;
					this.SendPropertyChanged("PointsWonBonus");
					this.OnPointsWonBonusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rounds")]
	public partial class Round : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoundID;
		
		private string _Name;
		
		private bool _Closed;
		
		private bool _Finished;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoundIDChanging(int value);
    partial void OnRoundIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnClosedChanging(bool value);
    partial void OnClosedChanged();
    partial void OnFinishedChanging(bool value);
    partial void OnFinishedChanged();
    #endregion
		
		public Round()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoundID
		{
			get
			{
				return this._RoundID;
			}
			set
			{
				if ((this._RoundID != value))
				{
					this.OnRoundIDChanging(value);
					this.SendPropertyChanging();
					this._RoundID = value;
					this.SendPropertyChanged("RoundID");
					this.OnRoundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Closed", DbType="Bit NOT NULL")]
		public bool Closed
		{
			get
			{
				return this._Closed;
			}
			set
			{
				if ((this._Closed != value))
				{
					this.OnClosedChanging(value);
					this.SendPropertyChanging();
					this._Closed = value;
					this.SendPropertyChanged("Closed");
					this.OnClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finished", DbType="bit NOT NULL")]
		public bool Finished
		{
			get
			{
				return this._Finished;
			}
			set
			{
				if ((this._Finished != value))
				{
					this.OnFinishedChanging(value);
					this.SendPropertyChanging();
					this._Finished = value;
					this.SendPropertyChanged("Finished");
					this.OnFinishedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PointsForRounds")]
	public partial class PointsForRound : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _RoundID;
		
		private int _MatchPoints;
		
		private int _MatchPointsBonus;
		
		private int _GoalscorerPoints;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoundIDChanging(int value);
    partial void OnRoundIDChanged();
    partial void OnMatchPointsChanging(int value);
    partial void OnMatchPointsChanged();
    partial void OnMatchPointsBonusChanging(int value);
    partial void OnMatchPointsBonusChanged();
    partial void OnGoalscorerPointsChanging(int value);
    partial void OnGoalscorerPointsChanged();
    #endregion
		
		public PointsForRound()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoundID
		{
			get
			{
				return this._RoundID;
			}
			set
			{
				if ((this._RoundID != value))
				{
					this.OnRoundIDChanging(value);
					this.SendPropertyChanging();
					this._RoundID = value;
					this.SendPropertyChanged("RoundID");
					this.OnRoundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchPoints", DbType="Int NOT NULL")]
		public int MatchPoints
		{
			get
			{
				return this._MatchPoints;
			}
			set
			{
				if ((this._MatchPoints != value))
				{
					this.OnMatchPointsChanging(value);
					this.SendPropertyChanging();
					this._MatchPoints = value;
					this.SendPropertyChanged("MatchPoints");
					this.OnMatchPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchPointsBonus", DbType="Int NOT NULL")]
		public int MatchPointsBonus
		{
			get
			{
				return this._MatchPointsBonus;
			}
			set
			{
				if ((this._MatchPointsBonus != value))
				{
					this.OnMatchPointsBonusChanging(value);
					this.SendPropertyChanging();
					this._MatchPointsBonus = value;
					this.SendPropertyChanged("MatchPointsBonus");
					this.OnMatchPointsBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalscorerPoints", DbType="Int NOT NULL")]
		public int GoalscorerPoints
		{
			get
			{
				return this._GoalscorerPoints;
			}
			set
			{
				if ((this._GoalscorerPoints != value))
				{
					this.OnGoalscorerPointsChanging(value);
					this.SendPropertyChanging();
					this._GoalscorerPoints = value;
					this.SendPropertyChanged("GoalscorerPoints");
					this.OnGoalscorerPointsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SettingID;
		
		private int _CurrentRoundID;
		
		private System.DateTime _FirstMatchDate;
		
		private double _ScoreMultiplier;
		
		private double _RoundGoalMultiplier;
		
		private double _BonusMultiplier;
		
		private System.Nullable<int> _LastNotificationRoundID;
		
		private int _MaxBonusPerMatch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingIDChanging(int value);
    partial void OnSettingIDChanged();
    partial void OnCurrentRoundIDChanging(int value);
    partial void OnCurrentRoundIDChanged();
    partial void OnFirstMatchDateChanging(System.DateTime value);
    partial void OnFirstMatchDateChanged();
    partial void OnScoreMultiplierChanging(double value);
    partial void OnScoreMultiplierChanged();
    partial void OnRoundGoalMultiplierChanging(double value);
    partial void OnRoundGoalMultiplierChanged();
    partial void OnBonusMultiplierChanging(double value);
    partial void OnBonusMultiplierChanged();
    partial void OnLastNotificationRoundIDChanging(System.Nullable<int> value);
    partial void OnLastNotificationRoundIDChanged();
    partial void OnMaxBonusPerMatchChanging(int value);
    partial void OnMaxBonusPerMatchChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SettingID
		{
			get
			{
				return this._SettingID;
			}
			set
			{
				if ((this._SettingID != value))
				{
					this.OnSettingIDChanging(value);
					this.SendPropertyChanging();
					this._SettingID = value;
					this.SendPropertyChanged("SettingID");
					this.OnSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentRoundID", DbType="Int NOT NULL")]
		public int CurrentRoundID
		{
			get
			{
				return this._CurrentRoundID;
			}
			set
			{
				if ((this._CurrentRoundID != value))
				{
					this.OnCurrentRoundIDChanging(value);
					this.SendPropertyChanging();
					this._CurrentRoundID = value;
					this.SendPropertyChanged("CurrentRoundID");
					this.OnCurrentRoundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstMatchDate", DbType="DateTime NOT NULL")]
		public System.DateTime FirstMatchDate
		{
			get
			{
				return this._FirstMatchDate;
			}
			set
			{
				if ((this._FirstMatchDate != value))
				{
					this.OnFirstMatchDateChanging(value);
					this.SendPropertyChanging();
					this._FirstMatchDate = value;
					this.SendPropertyChanged("FirstMatchDate");
					this.OnFirstMatchDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreMultiplier", DbType="Float NOT NULL")]
		public double ScoreMultiplier
		{
			get
			{
				return this._ScoreMultiplier;
			}
			set
			{
				if ((this._ScoreMultiplier != value))
				{
					this.OnScoreMultiplierChanging(value);
					this.SendPropertyChanging();
					this._ScoreMultiplier = value;
					this.SendPropertyChanged("ScoreMultiplier");
					this.OnScoreMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundGoalMultiplier", DbType="Float NOT NULL")]
		public double RoundGoalMultiplier
		{
			get
			{
				return this._RoundGoalMultiplier;
			}
			set
			{
				if ((this._RoundGoalMultiplier != value))
				{
					this.OnRoundGoalMultiplierChanging(value);
					this.SendPropertyChanging();
					this._RoundGoalMultiplier = value;
					this.SendPropertyChanged("RoundGoalMultiplier");
					this.OnRoundGoalMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusMultiplier", DbType="Float NOT NULL")]
		public double BonusMultiplier
		{
			get
			{
				return this._BonusMultiplier;
			}
			set
			{
				if ((this._BonusMultiplier != value))
				{
					this.OnBonusMultiplierChanging(value);
					this.SendPropertyChanging();
					this._BonusMultiplier = value;
					this.SendPropertyChanged("BonusMultiplier");
					this.OnBonusMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNotificationRoundID", DbType="Int")]
		public System.Nullable<int> LastNotificationRoundID
		{
			get
			{
				return this._LastNotificationRoundID;
			}
			set
			{
				if ((this._LastNotificationRoundID != value))
				{
					this.OnLastNotificationRoundIDChanging(value);
					this.SendPropertyChanging();
					this._LastNotificationRoundID = value;
					this.SendPropertyChanged("LastNotificationRoundID");
					this.OnLastNotificationRoundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxBonusPerMatch", DbType="int")]
		public int MaxBonusPerMatch
		{
			get
			{
				return this._MaxBonusPerMatch;
			}
			set
			{
				if ((this._MaxBonusPerMatch != value))
				{
					this.OnMaxBonusPerMatchChanging(value);
					this.SendPropertyChanging();
					this._MaxBonusPerMatch = value;
					this.SendPropertyChanged("MaxBonusPerMatch");
					this.OnMaxBonusPerMatchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private System.DateTime _InsertedDate;
		
		private int _ProfileID;
		
		private int _PointsWon;
		
		private int _PointsWonBonus;
		
		private string _DisplayName;
		
		private int _Bonus;
		
		private string _PasswordSalt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnInsertedDateChanging(System.DateTime value);
    partial void OnInsertedDateChanged();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnPointsWonChanging(int value);
    partial void OnPointsWonChanged();
    partial void OnPointsWonBonusChanging(int value);
    partial void OnPointsWonBonusChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnBonusChanging(int value);
    partial void OnBonusChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertedDate", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime InsertedDate
		{
			get
			{
				return this._InsertedDate;
			}
			set
			{
				if ((this._InsertedDate != value))
				{
					this.OnInsertedDateChanging(value);
					this.SendPropertyChanging();
					this._InsertedDate = value;
					this.SendPropertyChanged("InsertedDate");
					this.OnInsertedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="Int NOT NULL")]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsWon", DbType="Int NOT NULL")]
		public int PointsWon
		{
			get
			{
				return this._PointsWon;
			}
			set
			{
				if ((this._PointsWon != value))
				{
					this.OnPointsWonChanging(value);
					this.SendPropertyChanging();
					this._PointsWon = value;
					this.SendPropertyChanged("PointsWon");
					this.OnPointsWonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsWonBonus", DbType="Int NOT NULL")]
		public int PointsWonBonus
		{
			get
			{
				return this._PointsWonBonus;
			}
			set
			{
				if ((this._PointsWonBonus != value))
				{
					this.OnPointsWonBonusChanging(value);
					this.SendPropertyChanging();
					this._PointsWonBonus = value;
					this.SendPropertyChanged("PointsWonBonus");
					this.OnPointsWonBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonus", DbType="Int NOT NULL")]
		public int Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				if ((this._Bonus != value))
				{
					this.OnBonusChanging(value);
					this.SendPropertyChanging();
					this._Bonus = value;
					this.SendPropertyChanged("Bonus");
					this.OnBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="VarChar(100)")]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetAllGroupStandingsResult
	{
		
		private int _TeamID;
		
		private string _Group;
		
		private string _Flag;
		
		private string _Team;
		
		private System.Nullable<int> _Pld;
		
		private System.Nullable<int> _Won;
		
		private System.Nullable<int> _Draw;
		
		private System.Nullable<int> _Lost;
		
		private System.Nullable<int> _Scored;
		
		private System.Nullable<int> _Against;
		
		private System.Nullable<int> _Agg;
		
		private System.Nullable<int> _Pts;
		
		public GetAllGroupStandingsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int NOT NULL")]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this._TeamID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="VarChar(1)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this._Group = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this._Flag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					this._Team = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pld", DbType="Int")]
		public System.Nullable<int> Pld
		{
			get
			{
				return this._Pld;
			}
			set
			{
				if ((this._Pld != value))
				{
					this._Pld = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Won", DbType="Int")]
		public System.Nullable<int> Won
		{
			get
			{
				return this._Won;
			}
			set
			{
				if ((this._Won != value))
				{
					this._Won = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Draw", DbType="Int")]
		public System.Nullable<int> Draw
		{
			get
			{
				return this._Draw;
			}
			set
			{
				if ((this._Draw != value))
				{
					this._Draw = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lost", DbType="Int")]
		public System.Nullable<int> Lost
		{
			get
			{
				return this._Lost;
			}
			set
			{
				if ((this._Lost != value))
				{
					this._Lost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scored", DbType="Int")]
		public System.Nullable<int> Scored
		{
			get
			{
				return this._Scored;
			}
			set
			{
				if ((this._Scored != value))
				{
					this._Scored = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Against", DbType="Int")]
		public System.Nullable<int> Against
		{
			get
			{
				return this._Against;
			}
			set
			{
				if ((this._Against != value))
				{
					this._Against = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agg", DbType="Int")]
		public System.Nullable<int> Agg
		{
			get
			{
				return this._Agg;
			}
			set
			{
				if ((this._Agg != value))
				{
					this._Agg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pts", DbType="Int")]
		public System.Nullable<int> Pts
		{
			get
			{
				return this._Pts;
			}
			set
			{
				if ((this._Pts != value))
				{
					this._Pts = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
